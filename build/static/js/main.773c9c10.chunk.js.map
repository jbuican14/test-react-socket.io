{"version":3,"sources":["redux/util/sportUtil.js","redux/reducers/sportsReducer.js","redux/reducers/index.js","redux/constants.js","redux/store.js","redux/sportActions.js","components/Loader.js","components/SportSelectionCount.jsx","components/SportEventsListItem.jsx","components/SportEventsList.jsx","components/SportSubCategory.jsx","components/SportCategory.jsx","App.js","serviceWorker.js","index.js"],"names":["updateActive","state","data","sports","map","sport","subcat","item","event","forEach","evt","id","active","updateSportSelection","selection","selected","console","log","updateSportPrice","price","newPrice","updateSportBtn","select","btnId","btn","initialState","loading","error","combineReducers","action","type","payload","newState","Object","assign","newStateSelection","newStatePrice","newStateBtn","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","setLoading","Loader","Spinner","animation","role","style","width","height","margin","display","className","SportSelectionCount","sportStatus","sportId","dispatch","useDispatch","useEffect","Button","variant","disabled","onClick","e","target","InputGroup","Prepend","xs","paddingTop","Text","backgroundColor","SportEventsListItem","isSportEventSelector","selectionSport","sportEventSelector","useSelector","socket","io","on","updatePrice","setSportSelectionEvents","socketIoConnection","cat","eventSelect","Row","Col","name","SportEventsList","sportEvent","setSportEvents","padding","borderBottom","background","color","toString","toUpperCase","key","SportSubCategory","subSport","connect","getSports","a","fetch","res","json","category","response","Container","fluid","length","App","M","AutoInit","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.773c9c10.chunk.js","sourcesContent":["export const updateActive = (state, data) => {\n  return state.sports.map((sport) => {\n    return sport.subcat.map((item) => {\n      return item.event.forEach((evt) => {\n        if (evt.id === data.id) evt.active = data.active;\n      });\n    });\n  });\n};\nexport const updateSportSelection = (state, data) => {\n  return state.sports.map((sport) => {\n    return sport.subcat.map((item) => {\n      return item.event.map((evt) => {\n        return evt.selection.forEach((selected) => {\n          console.log(data.active);\n          if (selected.id === data.id) return (selected.active = data.active);\n        });\n      });\n    });\n  });\n};\n\nexport const updateSportPrice = (state, data) => {\n  return state.sports.map((sport) => {\n    return sport.subcat.map((item) => {\n      return item.event.map((evt) => {\n        return evt.selection.forEach((selected) => {\n          if (selected.id === data.id) selected.price = data.newPrice;\n        });\n      });\n    });\n  });\n};\nexport const updateSportBtn = (state, data) => {\n  return state.sports.map((sport) => {\n    return sport.subcat.map((item) => {\n      return item.event.map((evt) => {\n        return evt.selection.map((select) => {\n          if (select.id === +data.btnId) {\n            !state.btn[+data.btnId]\n              ? (state.btn[+data.btnId] = true)\n              : (state.btn[+data.btnId] = false);\n          }\n        });\n      });\n    });\n  });\n};\n","import {\n  GET_SPORTS,\n  SET_LOADING,\n  SPORTS_ERROR,\n  SPORT_UPDATE_PRICE,\n  SPORT_EVENT,\n  SPORT_BTN_CLICK,\n  SPORT_SELECTION_EVENT,\n} from '../constants';\n\nimport {\n  updateActive,\n  updateSportPrice,\n  updateSportBtn,\n  updateSportSelection,\n} from '../util/sportUtil';\n\nconst initialState = {\n  sports: null,\n  loading: false,\n  error: null,\n  btn: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_SPORTS:\n      return {\n        ...state,\n        sports: action.payload,\n        loading: false,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case SPORTS_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case SPORT_EVENT:\n      const newState = Object.assign({}, state);\n      updateActive(newState, action.payload);\n      return {\n        ...newState,\n      };\n    case SPORT_SELECTION_EVENT:\n      const newStateSelection = Object.assign({}, state);\n      updateSportSelection(newStateSelection, action.payload);\n      return {\n        ...newStateSelection,\n      };\n    case SPORT_UPDATE_PRICE:\n      const newStatePrice = Object.assign({}, state);\n      updateSportPrice(newStatePrice, action.payload);\n      return {\n        ...newStatePrice,\n      };\n    case SPORT_BTN_CLICK:\n      const newStateBtn = Object.assign({}, state);\n      updateSportBtn(newStateBtn, action.payload);\n      return {\n        ...newStateBtn,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport sportsReducer from './sportsReducer';\n\nexport default combineReducers({\n  sports: sportsReducer,\n});\n","export const GET_SPORTS = 'GET_SPORTS';\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_ACTIVE = 'SET_ACTIVE';\nexport const SPORTS_ERROR = 'SPORTS_ERROR';\nexport const SPORT_UPDATE_PRICE = 'SPORT_UPDATE_PRICE';\nexport const SPORT_EVENT = 'SPORT_EVENT';\nexport const SPORT_SELECTION_EVENT = 'SPORT_SELECTION_EVENT';\nexport const SPORT_BTN_CLICK = 'SPORT_BTN_CLICK';\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  GET_SPORTS,\n  SET_LOADING,\n  SPORTS_ERROR,\n  SPORT_UPDATE_PRICE,\n  SPORT_EVENT,\n  SPORT_BTN_CLICK,\n  SPORT_SELECTION_EVENT,\n} from './constants';\n\n/*\nGet sport events from server \n*/\nexport const getSports = () => async (dispatch) => {\n  try {\n    setLoading();\n    const res = await fetch('http://localhost:3001/api/selections');\n    const data = await res.json();\n    dispatch({\n      type: GET_SPORTS,\n      payload: data.category,\n    });\n  } catch (err) {\n    dispatch({\n      type: SPORTS_ERROR,\n      payload: err.response.data,\n    });\n  }\n};\n\n/*\nSet Loading to True\n*/\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING,\n  };\n};\n\n/*\nUpdate the event Price\n*/\nexport const updatePrice = (data) => {\n  return {\n    type: SPORT_UPDATE_PRICE,\n    payload: data,\n  };\n};\n\n/* \nSet Events\n*/\nexport const setSportEvents = (data) => {\n  return {\n    type: SPORT_EVENT,\n    payload: data,\n  };\n};\n/* \nSet Selection Status\n*/\nexport const setSportSelectionEvents = (data) => {\n  return {\n    type: SPORT_SELECTION_EVENT,\n    payload: data,\n  };\n};\n\n/* \nSet Button ON/OFF\n*/\nexport const setSportButton = (data) => {\n  return {\n    type: SPORT_BTN_CLICK,\n    payload: data,\n  };\n};\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      style={{\n        width: '120px',\n        height: '120px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, InputGroup } from 'react-bootstrap';\nimport { setSportButton } from '../redux/sportActions';\n\nconst SportSelectionCount = ({ sportStatus, sportId, btn }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {}, []);\n  const clickHandler = (e) => {\n    dispatch(setSportButton({ btnId: e.target.id }));\n  };\n\n  return (\n    <>\n      <Button\n        variant=\"primary\"\n        className={`justify-content-center ${btn}`}\n        disabled={!sportStatus}\n        onClick={clickHandler}\n        id={sportId}\n      >\n        Add\n      </Button>\n      <InputGroup.Prepend xs={1} style={{ paddingTop: '.4rem' }}>\n        <InputGroup.Text style={{ backgroundColor: '#ffffff' }}>\n          {btn ? '1' : '\\u00A0'}\n        </InputGroup.Text>\n      </InputGroup.Prepend>\n    </>\n  );\n};\n\nexport default SportSelectionCount;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport io from 'socket.io-client';\nimport { Col, Row } from 'react-bootstrap';\nimport { updatePrice, setSportSelectionEvents } from '../redux/sportActions';\nimport SportSelectionCount from './SportSelectionCount';\n\nconst SportEventsListItem = ({ selectionSport, active, btn }) => {\n  const dispatch = useDispatch();\n  const sportEventSelector = useSelector((state) => state.sports.sports);\n  const SOCKET_SERVER_URL = 'http://localhost:3001';\n  let isSportEventSelector;\n\n  useEffect(() => {\n    const socketIoConnection = () => {\n      const socket = io(SOCKET_SERVER_URL);\n      socket.on('selectionPriceUpdate', (data) => {\n        dispatch(updatePrice(data));\n      });\n      socket.on('SelectionStateUpdate', (data) => {\n        dispatch(setSportSelectionEvents(data));\n      });\n    };\n    socketIoConnection();\n  }, [dispatch]);\n\n  // TO DO : Create a helper method\n  if (sportEventSelector) {\n    sportEventSelector.map((cat) => {\n      return cat.subcat.map((evt) => {\n        return evt.event.map((eventSelect) => {\n          return eventSelect.selection.map((select) => {\n            if (select.id === selectionSport.id)\n              return (isSportEventSelector = select.active);\n          });\n        });\n      });\n    });\n  }\n\n  return (\n    <Row className=\"rowGap\">\n      <Col xs={6}>{selectionSport.name}</Col>\n      <Col>{selectionSport.price}</Col>\n      <Col>\n        <SportSelectionCount\n          sportStatus={active && isSportEventSelector}\n          sportId={selectionSport.id}\n          btn={btn}\n        />\n      </Col>\n    </Row>\n  );\n};\n\nexport default SportEventsListItem;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport io from 'socket.io-client';\nimport { Row, Col } from 'react-bootstrap';\nimport Loader from './Loader';\nimport { setSportEvents } from '../redux/sportActions';\nimport SportEventsListItem from './SportEventsListItem';\n\nconst SportEventsList = ({ sportEvent, btn }) => {\n  const dispatch = useDispatch();\n  const SOCKET_SERVER_URL = 'http://localhost:3001';\n\n  useEffect(() => {\n    const socketIoConnection = () => {\n      const socket = io(SOCKET_SERVER_URL);\n      socket.on('eventStateUpdate', (data) => {\n        dispatch(setSportEvents(data));\n      });\n    };\n    socketIoConnection();\n  }, [dispatch]);\n\n  const style = {\n    padding: '1rem',\n    borderBottom: '1px solid grey',\n    background: '#27afb1',\n    color: '#ffffff',\n  };\n\n  return (\n    <>\n      {sportEvent ? (\n        <>\n          <Row>\n            <Col xs={8} style={style}>\n              Sport Events : {sportEvent.name}\n            </Col>\n            <Col xs={1} style={style}>\n              Status\n            </Col>\n            <Col style={style}>\n              Active : {sportEvent.active.toString().toUpperCase()}\n            </Col>\n          </Row>\n          {sportEvent.selection.map((selectionSport) => (\n            <SportEventsListItem\n              key={selectionSport.id}\n              selectionSport={selectionSport}\n              active={sportEvent.active}\n              btn={btn ? btn[selectionSport.id] : ''}\n            />\n          ))}\n        </>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nexport default SportEventsList;\n","import React from 'react';\n\nconst SportSubCategory = ({ subSport }) => {\n  return (\n    <>\n      <h6 className=\"text-left\">Sport Subcategory : {subSport.name}</h6>\n    </>\n  );\n};\n\nexport default SportSubCategory;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { getSports } from '../redux/sportActions';\nimport Loader from './Loader';\nimport SportEventsList from './SportEventsList';\nimport SportSubCategory from './SportSubCategory';\n\nconst SportCategory = ({ sports: { sports, loading, btn }, getSports }) => {\n  useEffect(() => {\n    getSports();\n  }, [getSports]);\n\n  if (loading || sports === null) {\n    return <Loader />;\n  }\n  return (\n    <>\n      <Container fluid>\n        <Row>\n          <Col style={{ margin: '1.5rem' }}>\n            {!loading && sports.length === 0 ? (\n              <Loader />\n            ) : (\n              sports.map((category) => (\n                <div key={category.id} style={{ paddingTop: '1.2rem' }}>\n                  <h4 className=\"text-center\">\n                    Sport Category :{category.name}\n                  </h4>\n                  {category.subcat.map((subSport) => (\n                    <div key={subSport.id}>\n                      <SportSubCategory subSport={subSport} />\n                      {subSport.event.map((sportEvent) => (\n                        <div key={sportEvent.id}>\n                          <SportEventsList sportEvent={sportEvent} btn={btn} />\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n              ))\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  sports: state.sports,\n});\n\nexport default connect(mapStateToProps, { getSports })(SportCategory);\n","import React, { useEffect } from 'react';\nimport { Provider } from 'react-redux';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport './App.css';\nimport store from './redux/store';\nimport SportCategory from './components/SportCategory';\n\nfunction App() {\n  useEffect(() => {\n    // Init Materialize js\n    M.AutoInit();\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <SportCategory />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport io from 'socket.io-client';\nimport './bootstrap.min.css';\nimport './index.css';\n\nconst socket = io('http://localhost:3001');\n/*\nsocket.on('selectionPriceUpdate', (data) =>\n  console.log('selectionPriceUpdate', data)\n  //{newPrice: 6, id: 1111}\n);\n\nsocket.on('eventStateUpdate', (data) => console.log('eventStateUpdate', data));\n//{active: true, id: 331}\n*/\nsocket.on('SelectionStateUpdate', (data) =>\n  console.log('selectionStateUpdate', data)\n);\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}